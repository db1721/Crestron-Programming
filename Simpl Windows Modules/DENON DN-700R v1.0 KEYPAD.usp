/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:	CrestronJapan
System Name:
System Number:
Programmer:		Lim
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#SYMBOL_NAME "DENON DN-700R v1.0 KEYPAD"
// #HINT ""
//#DEFINE_CONSTANT
// #CATEGORY "" 
//#CATEGORY "24" 
// #DEFAULT_VOLATILE
//#DEFAULT_NONVOLATILE
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT	KEY_SIGN_FOR_PITCH;
DIGITAL_INPUT	KEY_POSITIVE, KEY_NEGATIVE, KEY_0, KEY_1,KEY_2,KEY_3,KEY_4,KEY_5,KEY_6,KEY_7,KEY_8,KEY_9;
DIGITAL_INPUT	KEY_BACKSPACE,KEY_CLEAR,KEY_ENTER;
DIGITAL_INPUT	PREFIX_ZERO;
ANALOG_INPUT	UPPER_LIMIT,LOWER_LIMIT;

STRING_OUTPUT	KEY_STRING;
STRING_OUTPUT	TO_MODULE_STRING;
/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
INTEGER i;
STRING TEMP_NUMBER$[6];
string ZERO_string[4];
STRING SIGN$[1];

/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
FUNCTION STRING_OUT_F(STRING NOS)
{


TEMP_NUMBER$ = TEMP_NUMBER$ + NOS;

IF (ATOI(TEMP_NUMBER$)>UPPER_LIMIT)
	{
	KEY_STRING = "Out Of Range";
	TEMP_NUMBER$ = left(TEMP_NUMBER$,len(TEMP_NUMBER$)-1);
	Delay (200);
	}

KEY_string = TEMP_NUMBER$;
}

/*******************************************************************************************/
 PUSH KEY_0
{
IF(LEN(TEMP_NUMBER$))
	{
	STRING_OUT_F("0");
	}

}

PUSH KEY_POSITIVE
{
STRING_OUT_F("+");
}

PUSH KEY_NEGATIVE
{
STRING_OUT_F("-");
}

PUSH KEY_1
{
STRING_OUT_F("1");
}

PUSH KEY_2
{
STRING_OUT_F("2");
}

PUSH KEY_3
{
STRING_OUT_F("3");
}

PUSH KEY_4
{
STRING_OUT_F("4");
}

PUSH KEY_5
{
STRING_OUT_F("5");
}

PUSH KEY_6
{
STRING_OUT_F("6");
}

PUSH KEY_7
{
STRING_OUT_F("7");
}

PUSH KEY_8
{
STRING_OUT_F("8");
}

PUSH KEY_9
{
STRING_OUT_F("9");
}

PUSH KEY_BACKSPACE
{
IF (len(TEMP_NUMBER$))
	{
	TEMP_NUMBER$ = left(TEMP_NUMBER$,len(TEMP_NUMBER$)-1);
	}
STRING_OUT_F("");
}

PUSH KEY_CLEAR
{
Clearbuffer(TEMP_NUMBER$);
Clearbuffer(SIGN$);
STRING_OUT_F("");
}

PUSH KEY_ENTER
{


IF ((prefix_zero)&&(len(TEMP_NUMBER$)))
	{
	IF (FIND("+",TEMP_NUMBER$))
		{
		SIGN$ = REMOVE("+",TEMP_NUMBER$);
		If (KEY_SIGN_FOR_PITCH) SIGN$ = "0"; 
		}
	IF (FIND("-",TEMP_NUMBER$))
		{
		SIGN$ = REMOVE("-",TEMP_NUMBER$);
		If (KEY_SIGN_FOR_PITCH) SIGN$ = "1"; 
		}		


	makestring (TO_MODULE_STRING, "%s%s%s", SIGN$ ,RIGHT(ZERO_string,(LEN(ITOA(UPPER_LIMIT))-len(TEMP_NUMBER$))),TEMP_NUMBER$);
    }
else
	{
     TO_MODULE_STRING = TEMP_NUMBER$;
	}

}
/******************************************************************************************* =
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/
 Function Main()
{
Clearbuffer(TEMP_NUMBER$);
STRING_OUT_F("");
ZERO_string = "0000";

}
