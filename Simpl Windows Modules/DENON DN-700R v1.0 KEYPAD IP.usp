/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:	CrestronJapan
System Name:
System Number:
Programmer:		Lim
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#SYMBOL_NAME "DENON DN-700R v1.0 KEYPAD IP"
// #HINT ""
#DEFINE_CONSTANT UPPER_LIMIT 255
#DEFINE_CONSTANT LOWER_LIMIT 0
// #CATEGORY "" 
//#CATEGORY "24" 
// #DEFAULT_VOLATILE
//#DEFAULT_NONVOLATILE
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT	KEY_0, KEY_1,KEY_2,KEY_3,KEY_4,KEY_5,KEY_6,KEY_7,KEY_8,KEY_9, KEY_DOT;
DIGITAL_INPUT	KEY_BACKSPACE,KEY_CLEAR,KEY_ENTER;
DIGITAL_OUTPUT	KEY_ENTER_GO;
STRING_OUTPUT	KEY_STRING;
STRING_OUTPUT	TO_MODULE_STRING;
/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
INTEGER DOT_COUNT,COUNT, DOT_POSITION;
STRING ZERO_string[3],TEMP_IP$[16],TEMP2_IP$[16],IP_set[4][3];
/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
FUNCTION CHECK_DOT_F(STRING CHECK$)
{
 
 	DOT_COUNT = 0;
    DOT_POSITION =1;
	FOR (COUNT = 0 TO 4)
		{
         IF (FIND(".",TEMP_IP$,DOT_POSITION))  // find the nos for dot 
			{
			DOT_POSITION = FIND(".",TEMP_IP$,DOT_POSITION) + 1;
            DOT_COUNT = DOT_COUNT +1;
			}
		}
}

FUNCTION CHECK_STRING_F(STRING CHECK$)
{

IF (ATOI(CHECK$) > UPPER_LIMIT) // Check the ip addrees is not more then 255
		{
		KEY_STRING = "Out Of Range";
		TEMP_IP$ = left(TEMP_IP$,len(TEMP_IP$)-1);
		Delay (100);
		}
ELSE IF (LEN(CHECK$) > 3) 
		{
		KEY_STRING = "Too many digi";
		TEMP_IP$ = left(TEMP_IP$,len(TEMP_IP$)-1);
		Delay (100);
		}
}


FUNCTION STRING_OUT_F(STRING NOS)
{

TEMP_IP$ = TEMP_IP$ + NOS;
IF (FIND(".",TEMP_IP$))
	{
	CHECK_DOT_F(TEMP_IP$);
	IF (DOT_COUNT > 3) // cannot more then 4 dot in a ip address
		{
        KEY_STRING = "Too many dot";
		TEMP_IP$ = left(TEMP_IP$,len(TEMP_IP$)-1);
		Delay (100);

		}
	ELSE // check the lower bit is not more then 255
		{
		
		CHECK_STRING_F( RIGHT(TEMP_IP$,(LEN(TEMP_IP$)- ReverseFind(".",TEMP_IP$)))); 
 		}   
	}
ELSE
	{
	CHECK_STRING_F(TEMP_IP$); // check the first set of ip not more than 255
	}
KEY_string = TEMP_IP$;
}

/*******************************************************************************************/
 PUSH KEY_0
{
STRING_OUT_F("0");
}

PUSH KEY_1
{
STRING_OUT_F("1");
}

PUSH KEY_2
{
STRING_OUT_F("2");
}

PUSH KEY_3
{
STRING_OUT_F("3");
}

PUSH KEY_4
{
STRING_OUT_F("4");
}

PUSH KEY_5
{
STRING_OUT_F("5");
}

PUSH KEY_6
{
STRING_OUT_F("6");
}

PUSH KEY_7
{
STRING_OUT_F("7");
}

PUSH KEY_8
{
STRING_OUT_F("8");
}

PUSH KEY_9
{
STRING_OUT_F("9");
}

PUSH KEY_DOT
{
STRING_OUT_F(".");
}

PUSH KEY_BACKSPACE
{
IF (len(TEMP_IP$))
	{
	TEMP_IP$ = left(TEMP_IP$,len(TEMP_IP$)-1);
	}
STRING_OUT_F("");
}

PUSH KEY_CLEAR
{
Clearbuffer(TEMP_IP$);

STRING_OUT_F("");
}

PUSH KEY_ENTER
{
CHECK_DOT_F(TEMP_IP$);
IF (DOT_COUNT < 3) // cannot more then 4 dot in a ip address
	{
    KEY_STRING = "Missing of Dot";
	delay(100);
    KEY_STRING = TEMP_IP$;
	}
Else
	{
	TEMP2_IP$ = TEMP_IP$;
	IP_set[1] = ITOA(ATOI(REMOVE (".",TEMP2_IP$))); 
	IP_set[2] = ITOA(ATOI(REMOVE (".",TEMP2_IP$)));
	IP_set[3] = ITOA(ATOI(REMOVE (".",TEMP2_IP$)));
	IP_set[4] = TEMP2_IP$;

    For (count = 1 to 4)
		{
         IP_set[count] = RIGHT(ZERO_string,3 -len(IP_set[count])) + IP_set[count];
		}
	makestring (TO_MODULE_STRING, "%s%s%s%s",IP_set[1],IP_set[2],IP_set[3],IP_set[4]);
	}
}
/******************************************************************************************* =
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/
 Function Main()
{
ZERO_string = "000";
Clearbuffer(TEMP_IP$);
STRING_OUT_F("");

}
