/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer:MDF
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
 #SYMBOL_NAME "Vaddio EasyIP PTZ"
// #HINT ""
// #DEFINE_CONSTANT
#DEFINE_CONSTANT FileLocation "\\USER\\"
// #CATEGORY "" 
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM

#HELP_BEGIN
	IP Port 23
	admin
	password
	camera Inputs:
		Decoder = 1-4
		Mixer = 2-5
		0 will omit the input selection in the string for direct control
#HELP_END




Digital_Input _SKIP_, _SKIP_, PowerOn, PowerOff, _SKIP_, Home, _SKIP_, Autofocus, _SKIP_, Recall, Store, _SKIP_, Tilt[2], Pan[2], Zoom[2], Focus[2,2];
digital_Output _SKIP_, _SKIP_, Stored;
String_Input In$[500];
Analog_Input CameraInput, Preset, SwitchInput;
String_Output Out$;

String_Parameter Login[100], Password[100];


Integer StoreType, ParamType;
Signed_Integer PTZ, PresetArray[99][3];//[rows][columns]  Row=Preset# Column= 1-4/PAN 5-8/TILT 9-12/ZOOM   Row 99 is master
String FileName[250];

/*******************************************************************************************
  Parameter Properties
  (Uncomment and declare parameter properties as needed)
*******************************************************************************************/

#BEGIN_PARAMETER_PROPERTIES Login
   propDefaultValue = "admin";
#END_PARAMETER_PROPERTIES

#BEGIN_PARAMETER_PROPERTIES Password
   propDefaultValue = "password";
#END_PARAMETER_PROPERTIES


Function SendString(String Command)
{
	If(CameraInput > 0)
	{
		Makestring(Out$,"camera %u %s", CameraInput, Command);
	}
	Else
	{
		Makestring(Out$,"camera %s", Command);
	}
}

push Store
{
	String Temp[100];
	Makestring(Temp, " preset store %u\r", preset);
	sendString(Temp);
	Pulse(10, Stored);
}
push Recall
{
	String Temp[100];
	Makestring(Temp, " preset recall %u\r", preset);
	sendString(Temp);
		
}
Push Tilt
{
	PTZ = GetLastModifiedArrayIndex();
	Switch(PTZ)
	{
		Case(1):
		{
			SendString(" tilt up\r");
		}
		Case(2):
		{
			SendString(" tilt down\r");
		}
	}
}
Push Pan
{
	PTZ = GetLastModifiedArrayIndex();
	Switch(PTZ)
	{
		Case(1):
		{
			SendString(" pan left\r");
		}
		Case(2):
		{
			SendString(" pan right\r");
		}
	}
}
Push Zoom
{
	PTZ = GetLastModifiedArrayIndex();
	Switch(PTZ)
	{
		Case(1):
		{
			SendString(" zoom in\r");
		}
		Case(2):
		{
			SendString(" zoom out\r");
		}
	}
}
Push Focus
{
	PTZ = GetLastModifiedArrayIndex();
	Switch(PTZ)
	{
		Case(1):
		{
			SendString(" focus near\r");
		}
		Case(2):
		{
			SendString(" focus far\r");
		}
	}
}
Push Autofocus
{
	SendString(" focus mode auto\r");
}
Push PowerOn
{
	SendString(" standby off\r");
}
Push PowerOff
{
	SendString(" standby on\r");
}
Push Home
{
	SendString(" home\r");
}



release pan
{
	SendString(" pan stop\r");
}
release focus
{
	SendString(" focus stop\r");
}
release tilt
{
	SendString(" tilt stop\r");
}
release zoom
{
	SendString(" zoom stop\r");
}
Change SwitchInput
{
		Makestring(Out$, "video source set input%u\n", SwitchInput);
}
Function Main()
{
	FileName = FileLocation + "Camera" + GetSymbolReferenceName() + ".dat";
}
Change In$
{
	If(Find("login:", In$))
	{
		Out$ = Login + "\r";
	}
	Else If(Find("Login:", In$))
	{
		Out$ = Login + "\r";
	}
	Else If(Find("password:", In$))
	{
		Out$ = Password + "\r";
	}
	Else If(Find("Password:", In$))
	{
		Out$ = Password + "\r";
	}
}


